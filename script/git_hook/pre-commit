#!/bin/bash

source $(dirname $0)/../util/print.sh

function remove_last_char_if_not_empty()
{
  container=("$@")
  if [[ -n "$container" ]]; then
    container=${container::-1}
  fi
  echo "$container"
}

function create_pattern()
{
  files_paths_list=("$@")
  pattern=""
  for file_name in $files_paths_list; do
    pattern="${pattern}${file_name}|"
  done
  pattern=$(remove_last_char_if_not_empty "${pattern[*]}")
  echo "$pattern"
}

function filter_array_with_inverted_regEx()
{
  files_paths_list=("$@")
  query=$2
  container=""
  if [[ -z "${query}" ]]; then
    container=$files_paths_list
  else
    for value in $files_paths_list; do
      matched_string=$(echo "$value" | grep -v -E "$query")
      if [[ -n "$matched_string" ]]; then
        container="${container}${value} "
      fi
    done
    container=$(remove_last_char_if_not_empty "${container[*]}")
  fi
  echo "$container"
}

function add_files_to_staged_tree()
{
  files_paths=("$@")
  if [[ -n "${files_paths// /}" ]]; then
    git add $files_paths
  fi
}

eslint_autofix_flag=""

ends_with_js_or_jsx=".*\.jsx?$"
ends_with_ts_or_tsx=".*\.tsx?$"

eslint_exit_code=0

not_staged_js_jsx_files=$(git diff --diff-filter=b --name-only | grep -E "$ends_with_js_or_jsx")
not_staged_ts_tsx_files=$(git diff --diff-filter=b --name-only | grep -E "$ends_with_ts_or_tsx")

staged_js_jsx_files=$(git diff --cached --diff-filter=d --name-only | grep -E "$ends_with_js_or_jsx")
staged_ts_tsx_files=$(git diff --cached --diff-filter=d --name-only | grep -E "$ends_with_ts_or_tsx")

js_jsx_filter_regex=$(create_pattern "${not_staged_js_jsx_files[*]}")
ts_tsx_filter_regex=$(create_pattern "${not_staged_ts_tsx_files[*]}")

js_jsx_files_to_add_after_linting=$(filter_array_with_inverted_regEx "${staged_js_jsx_files[*]}" "${js_jsx_filter_regex}")
ts_tsx_files_to_add_after_linting=$(filter_array_with_inverted_regEx "${staged_ts_tsx_files[*]}" "${ts_tsx_filter_regex}")

if [ ${#js_jsx_files_to_add_after_linting} = ${#staged_js_jsx_files} ]; then
  eslint_autofix_flag="--fix"
fi

if [[ -n "$staged_js_jsx_files" ]] || [[ -n "$staged_ts_tsx_files" ]]; then
  print_info " Running eslint..."
  ./node_modules/.bin/eslint $staged_js_jsx_files $staged_ts_tsx_files --quiet $eslint_autofix_flag
  eslint_exit_code=$?

  if [ $eslint_exit_code != 0 ]; then
    print_error " Error during eslint linting"
    exit 1
  fi

  add_files_to_staged_tree "${js_jsx_files_to_add_after_linting[*]} ${ts_tsx_files_to_add_after_linting[*]}"
  print_success " Lint all ts/js files correctly"
fi
